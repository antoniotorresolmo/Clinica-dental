package views;

import javax.swing.JPanel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.List;
import java.util.Calendar;
import java.util.GregorianCalendar;

import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import com.toedter.calendar.JCalendar;
import javax.swing.JList;
import java.awt.Font;
import javax.swing.JButton;
import javax.swing.JLabel;
import java.util.*;

import java.awt.event.*;
import javax.swing.ImageIcon;


public class PnlAgenda extends JPanel {
	Color transparente = new Color(1.0f, 1.0f, 1.0f, 0.0f);
	  DefaultTableModel model;
	  Calendar cal = new GregorianCalendar();
	  JLabel lblFecha;
	  
	public PnlAgenda() {
		setLayout(new BorderLayout(0, 0));
		
		//JPanel panel_1 = new JPanel();
		
		GradientPanel panel_1 = new GradientPanel(Color.decode("#3CE6DB"), Color.decode("#4FFFA5"));
		
		add(panel_1, BorderLayout.CENTER);
		panel_1.setLayout(new BorderLayout(0, 0));
		//setUndecorated(true);
		JScrollPane scrollPane = new JScrollPane();
		
		scrollPane.setOpaque(false);
		scrollPane.setBackground(transparente);
		panel_1.add(scrollPane, BorderLayout.CENTER);
		
		JPanel panelCentral = new JPanel();
		panelCentral.setOpaque(false);
		panelCentral.setBackground(transparente);
	

		scrollPane.setViewportView(panelCentral);
		scrollPane.getViewport().setOpaque(false);
		panelCentral.setLayout(new BorderLayout(0, 0));
		
		JPanel panelLista = new JPanel();
		panelLista.setOpaque(false);
		panelLista.setBackground(transparente);
		panel_1.add(panelLista, BorderLayout.WEST);
		panelLista.setBorder(null);
		panelLista.setLayout(new BorderLayout(0, 0));
		
		List lista = new List();
		panelLista.add(lista);
		

	    lblFecha = new JLabel();
	    lblFecha.setBorder(new LineBorder(new Color(0, 0, 0), 3, true));
	    lblFecha.setFont(new Font("Tahoma", Font.BOLD, 16));
	    lblFecha.setBackground(Color.RED);
	    lblFecha.setHorizontalAlignment(SwingConstants.CENTER);
	 
	    JButton b1 = new JButton("");
	    b1.setBorder(new LineBorder(new Color(0, 0, 0), 3, true));
	    b1.setContentAreaFilled(false);
	    b1.setBackground(transparente);
	    b1.setIcon(new ImageIcon(PnlAgenda.class.getResource("/images/izq2.png")));
	    b1.addActionListener(new ActionListener() {
	      public void actionPerformed(ActionEvent ae) {
	        cal.add(Calendar.MONTH, -1);
	        updateMonth();
	      }
	    });
	 
	    JButton b2 = new JButton("");
	    b2.setContentAreaFilled(false);
	    b2.setBorder(new LineBorder(new Color(0, 0, 0), 3, true));
	    b2.setBackground(transparente);
	    b2.setIcon(new ImageIcon(PnlAgenda.class.getResource("/images/derecha2.png")));
	    b2.addActionListener(new ActionListener() {
	      public void actionPerformed(ActionEvent ae) {
	        cal.add(Calendar.MONTH, +1);
	        updateMonth();
	      }
	    });
	 
	  
	   // GradientPanel panel = new GradientPanel(Color.decode("#E093A0"), Color.decode("#E0ACB6"), GradientPanel.HORIZONTAL);
	    JPanel panel = new JPanel();
	    //panel.setOpaque(false);
	    panel.setBackground(Color.WHITE);
	    panel.setLayout(new BorderLayout());
	    panel.add(b1,BorderLayout.WEST);
	    panel.add(lblFecha,BorderLayout.CENTER);
	    panel.add(b2,BorderLayout.EAST);
	 
	 
	    String [] columns = {"Do","Lun","Ma","Mi","Ju","Vi","Sa"};
	    model = new DefaultTableModel(null,columns);
	   
	    JTable table = new JTable(model);
	    table.setBorder(null);
	    table.setBackground(Color.WHITE);
	    
	    
	    
	    table.setFont(new Font("Tahoma", Font.BOLD, 25));
	    table.setRowHeight(100);
	    
	    DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
	    centerRenderer.setHorizontalAlignment( SwingConstants.CENTER );
	   // table.setDefaultRenderer(String.class, centerRenderer);
	    
	    
	    
	    for (int columnIndex = 0; columnIndex < model.getColumnCount(); columnIndex++)
        {
            table.getColumnModel().getColumn(columnIndex).setCellRenderer(centerRenderer);
        }
	    
	    
	    table.addMouseListener(new MouseAdapter() {
	    	@Override
	    	public void mouseClicked(MouseEvent e) {
	    		System.out.println(table.getValueAt(table.getSelectedRow(), table.getSelectedColumn()));
	    		System.out.println(cal.get(Calendar.MONTH)+1 +" "+cal.getWeekYear());
	    	}
	    });
	    JScrollPane pane = new JScrollPane();
	    pane.setBorder(null);
	    pane.setOpaque(false);
	    	
	    pane.setBackground(transparente);
	    pane.getViewport().setOpaque(false);
	    pane.setViewportView(table);
	    panelCentral.add(panel,BorderLayout.NORTH);
	    panelCentral.add(pane,BorderLayout.CENTER);
	    
	    JPanel panelIzq = new JPanel();
	    panelIzq.setBorder(null);
	    panelIzq.setOpaque(false);
	    panelIzq.setBackground(transparente);
	    FlowLayout fl_panelIzq = (FlowLayout) panelIzq.getLayout();
	    panelCentral.add(panelIzq, BorderLayout.WEST);
	    
	    JLabel lblIzq = new JLabel("                            ");
	    lblIzq.setBackground(transparente);
	    lblIzq.setForeground(transparente);
	    panelIzq.add(lblIzq);
	    
	    JPanel panelDrch = new JPanel();
	    panelDrch.setBorder(null);
	    panelCentral.add(panelDrch, BorderLayout.EAST);
	    panelDrch.setOpaque(false);
	    panelDrch.setBackground(transparente);
	    
	    
	    
	    JLabel lblDrch = new JLabel("                            ");
	    panelDrch.add(lblDrch);
	    lblDrch.setBackground(transparente);
	    lblDrch.setForeground(transparente);
	    
	    
	    
	    JPanel panelBotones = new JPanel();
	    panelBotones.setBorder(null);
	    panelBotones.setOpaque(false);
	    panelBotones.setBackground(transparente);
	    
	    panelCentral.add(panelBotones, BorderLayout.SOUTH);
	    
	    JButton btnNewButton = new JButton("New button");
	    panelBotones.add(btnNewButton);
	 
	    this.updateMonth();
	 
	  }
	 
	  void updateMonth() {
	    cal.set(Calendar.DAY_OF_MONTH, 1);
	 
	    String month = cal.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.US);
	    int year = cal.get(Calendar.YEAR);
	    lblFecha.setText(month + " " + year);
	 
	    int startDay = cal.get(Calendar.DAY_OF_WEEK);
	    int numberOfDays = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
	    int weeks = cal.getActualMaximum(Calendar.WEEK_OF_MONTH);
	 
	    model.setRowCount(0);
	    model.setRowCount(weeks);
	 
	    int i = startDay-1;
	    for(int day=1;day<=numberOfDays;day++){
	      model.setValueAt(day, i/7 , i%7 );    
	      i = i + 1;
	    }
	 
	  }

	}


